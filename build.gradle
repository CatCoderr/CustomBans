buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }

    configurations.all {
        resolutionStrategy {
            force 'com.google.guava:guava:17.0'
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.3.0'
        classpath 'org.ajoberstar:gradle-git:1.5.1'
    }
}

allprojects {
    group = 'me.catcoder.custombans'
    version = '1.0-SNAPSHOT'
}

if (!project.hasProperty("artifactory_contextUrl")) ext.artifactory_contextUrl = "http://localhost"
if (!project.hasProperty("artifactory_user")) ext.artifactory_user = "guest"
if (!project.hasProperty("artifactory_password")) ext.artifactory_password = ""

if (!project.hasProperty("gitCommitHash") && !JavaVersion.current().isJava6()) {
    try {
        def repo = org.ajoberstar.grgit.Grgit.open(dir: '.')
        ext.gitCommitHash = repo.head().abbreviatedId
    } catch (Exception e) {
        println "Error getting commit hash: " + e.getMessage()
    }
}
if (!project.hasProperty("gitCommitHash")) {
    ext.gitCommitHash = "no_git_id"
}

apply plugin: 'com.jfrog.artifactory'
artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = project.version.contains("SNAPSHOT") ? 'libs-snapshot-local' : 'libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            ivy = false
        }
    }

    resolve {
        repository {
            repoKey = 'repo'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}
artifactoryPublish.skip = true

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'com.jfrog.artifactory'

    ext.internalVersion = version + ";" + gitCommitHash

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    checkstyle.configFile = new File(rootProject.projectDir, "config/checkstyle/checkstyle.xml")

    repositories {
        mavenCentral()
        maven { url "http://repo.bukkit.org/content/groups/public" }
        maven { url "http://repo.md-5.net/content/groups/public/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    if (JavaVersion.current().isJava8Compatible()) {
        // Java 8 turns on doclint which we fail
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives javadocJar
    }


    artifacts {
        archives sourcesJar
    }
    build.dependsOn(sourcesJar)
}

build.dependsOn(checkstyleMain)
build.dependsOn(checkstyleTest)
build.dependsOn(javadocJar)

shadowJar {
    classifier 'dist'
    dependencies {

    }
}
exclude 'GradleStart**'
exclude '.cache'
exclude 'LICENSE*'

artifactoryPublish {
    publishConfigs('archives')
}